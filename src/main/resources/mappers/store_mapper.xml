<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="storeMapper">
	<resultMap type="Store" id="resultStore">
		<result property="storeId" column="STORE_ID" />
		<result property="bookId" column="BOOK_ID" />
		<result property="storageId" column="STORAGE_ID" />
		<result property="empId" column="EMP_ID" />
		<result property="empName" column="EMP_NAME" />
		<result property="storeNum" column="STORE_NUM" />
		<result property="storePrice" column="STORE_PRICE" />
		<result property="storeDate" column="STORE_DATE" />
		<result property="classify" column="CLASSIFY" />
		<result property="bookName" column="BOOK_NAME" />
		<result property="clientName" column="CLIENT_NAME" />
		<result property="prevInvenId" column="PREV_INVEN_ID" />
		<result property="currInven" column="CURR_INVEN" />
		<result property="clientId" column="CLIENT_ID" />
	</resultMap>
	
	<select id="selectGetListCount" resultType="_int">
		select count(*) from store
	</select>
	
	<select id="selectReleaseList" parameterType="Paging" resultMap="resultStore">
		<![CDATA[
			SELECT *
			FROM (SELECT ROWNUM RNUM, STORE_ID, BOOK_ID, STORAGE_ID, EMP_ID, EMP_NAME, STORE_NUM, STORE_PRICE, STORE_DATE, CLASSIFY
			            FROM (SELECT * FROM STORE
			                        ORDER BY STORE_DATE DESC))
			WHERE CLASSIFY = '출고'AND (RNUM BETWEEN #{ startRow } AND #{ endRow })
		]]>	
	</select>
	
	<select id="selectStoreBookName" parameterType="_int" resultType="string">
		SELECT BOOK_NAME
		FROM BOOK
		WHERE BOOK_ID = 1
	</select>
	
	<select id="selectStoreClientName" parameterType="_int" resultType="string">
		SELECT CLIENT_NAME
		FROM CLIENT
		WHERE CLIENT_ID = #{ storageId }
	</select>
	
	<select id="selectStoreBookPrice" parameterType="_int" resultType="_int">
		SELECT BOOK_PRICE
		FROM BOOK
		WHERE BOOK_ID = #{ bookId }
	</select>

	<select id="selectStoreList" parameterType="Paging" resultMap ="resultStore">
		<![CDATA[
			SELECT *
			FROM (SELECT ROWNUM RNUM, STORE_ID, BOOK_ID, STORAGE_ID, EMP_ID, EMP_NAME, STORE_NUM, STORE_PRICE, STORE_DATE, CLASSIFY
			            FROM (SELECT * FROM STORE
			                        ORDER BY STORE_DATE DESC))
			WHERE CLASSIFY = '입고'AND (RNUM BETWEEN #{ startRow } AND #{ endRow })
		]]>	
	</select>
	
	<select id="selectStoreCountByDate" parameterType="Search" resultType="_int">
		
		SELECT COUNT(*) FROM INVENTORY
		WHERE INVEN_DATE BETWEEN #{ begin } and (to_date(#{ end }) + 1 - 1/86400) AND CLASSIFY = '입고'
	
	</select>
	
	<select id="selectStoreByDate" parameterType="Search" resultMap="resultStore">
		<![CDATA[
			SELECT *
			FROM (SELECT ROWNUM RNUM, STORE_ID, BOOK_ID,  STORAGE_ID, EMP_ID, EMP_NAME, STORE_NUM, 
			                            STORE_PRICE, STORE_DATE, CLASSIFY, BOOK_NAME, CLIENT_NAME
			            FROM (SELECT *
			                        FROM STORE
			                        LEFT JOIN CLIENT ON (CLIENT_ID = STORAGE_ID)
			                        LEFT JOIN BOOK USING (BOOK_ID)   
			                        WHERE STORE_DATE BETWEEN #{ begin } AND (TO_DATE(#{ end }) + 1 - 1/86400)))
			WHERE RNUM BETWEEN #{ startRow } AND #{ endRow }
			ORDER BY STORE_DATE DESC
		]]>
	</select>
	
	<select id="selectReleaseCountByDate" parameterType="Search" resultType="_int">
		SELECT COUNT(*) FROM STORE
		WHERE (STORE_DATE between to_date(#{ begin }) and to_date(#{ end }) + 1 - 1/86400) AND CLASSIFY = '출고'
	</select>
	
	<select id="selectReleaseByDate" parameterType="Search" resultMap="resultStore">
		<![CDATA[
			SELECT *
			FROM (SELECT ROWNUM RNUM, STORE_ID, BOOK_ID, STORAGE_ID, EMP_ID, EMP_NAME, STORE_NUM, STORE_PRICE, STORE_DATE, CLASSIFY
			      FROM (SELECT *
			            FROM STORE
			            WHERE (STORE_DATE between to_date(#{ begin }) and to_date(#{ end }) + 1 - 1/86400) 
			            AND CLASSIFY = '출고' 
			            ORDER BY STORE_DATE DESC
			            )
			      )
			WHERE RNUM between #{ startRow } and #{ endRow }
		]]>
	</select>
	
	<select id="selectStoreCountByBookId" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM STORE
		WHERE BOOK_ID LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectStoreCountByBookName" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM STORE
		JOIN BOOK USING (BOOK_ID)
		WHERE BOOK_NAME LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectStoreCountByEmpName" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM STORE
		WHERE EMP_NAME LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectStoreCountByClientName" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM STORE
		JOIN CLIENT ON (CLIENT_ID = STORAGE_ID)
		WHERE CLIENT_NAME LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectStoreByBookId" parameterType="Search" resultMap="resultStore" >
		<![CDATA[
			SELECT *
			FROM(SELECT ROWNUM RUM, SUB.*
			            FROM(SELECT * FROM STORE
	                        WHERE BOOK_ID LIKE '%' || #{ keyword } || '%'
	                        ORDER BY BOOK_ID DESC) SUB)
			LEFT JOIN BOOK USING (BOOK_ID)
			LEFT JOIN CLIENT ON (CLIENT_ID = STORAGE_ID)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow } AND CLASSIFY = '입고'
		]]>
	</select>
	
	<select id="selectStoreByBookName" parameterType="Search" resultMap="resultStore" >
		<![CDATA[
			SELECT *
			FROM (SELECT ROWNUM RUM, SUB.*
		           FROM (SELECT * FROM STORE
                               LEFT JOIN BOOK USING (BOOK_ID)
                              LEFT JOIN CLIENT ON (CLIENT_ID = STORAGE_ID)
                                WHERE BOOK_NAME LIKE '%' || #{ keyword } || '%'
                                ORDER BY BOOK_ID DESC) SUB)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow } AND CLASSIFY = '입고'
		]]>
	</select>
	
	<select id="selectStoreByEmpName" parameterType="Search" resultMap="resultStore" >
		<![CDATA[
			SELECT * FROM(SELECT ROWNUM RUM, SUB.*
			FROM(SELECT * FROM STORE
				LEFT JOIN BOOK USING (BOOK_ID)
                LEFT JOIN CLIENT ON (CLIENT_ID = STORAGE_ID)
                WHERE EMP_NAME LIKE '%' || #{ keyword } || '%'
                ORDER BY BOOK_ID DESC) SUB)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow } AND CLASSIFY = '입고'
		]]>
	</select>
	
	<select id="selectStoreByClientName" parameterType="Search" resultMap="resultStore" >
		<![CDATA[
			SELECT * FROM(SELECT ROWNUM RUM, SUB.*
			FROM(SELECT * FROM STORE
				LEFT JOIN BOOK USING (BOOK_ID)
                LEFT JOIN CLIENT ON (CLIENT_ID = STORAGE_ID)
                WHERE CLIENT_NAME LIKE '%' || #{ keyword } || '%'
                ORDER BY BOOK_ID DESC) SUB)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow } AND CLASSIFY = '입고'
		]]>
	</select>
	
	
	<!-- 출고 -->

		<select id="selectReleaseCountByBookId" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM STORE
		WHERE BOOK_ID LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectReleaseCountByBookName" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM STORE
		JOIN BOOK USING (BOOK_ID)
		WHERE BOOK_NAME LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectReleaseCountByEmpName" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM STORE
		WHERE EMP_NAME LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectReleaseCountByClientName" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM STORE
		JOIN CLIENT ON (CLIENT_ID = STORAGE_ID)
		WHERE CLIENT_NAME LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectReleaseByBookId" parameterType="Search" resultMap="resultStore" >
		<![CDATA[
			SELECT *
			FROM(SELECT ROWNUM RUM, SUB.*
			            FROM(SELECT * FROM STORE
	                        WHERE BOOK_ID LIKE '%' || #{ keyword } || '%'
	                        ORDER BY BOOK_ID DESC) SUB)
			LEFT JOIN BOOK USING (BOOK_ID)
			LEFT JOIN CLIENT ON (CLIENT_ID = STORAGE_ID)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow } AND CLASSIFY = '출고'
		]]>
	</select>
	
	<select id="selectReleaseByBookName" parameterType="Search" resultMap="resultStore" >
		<![CDATA[
			SELECT *
			FROM (SELECT ROWNUM RUM, SUB.*
		           FROM (SELECT * FROM STORE
                               LEFT JOIN BOOK USING (BOOK_ID)
                              LEFT JOIN CLIENT ON (CLIENT_ID = STORAGE_ID)
                                WHERE BOOK_NAME LIKE '%' || #{ keyword } || '%'
                                ORDER BY BOOK_ID DESC) SUB)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow } AND CLASSIFY = '출고'
		]]>
	</select>
	
	<select id="selectReleaseByEmpName" parameterType="Search" resultMap="resultStore" >
		<![CDATA[
			SELECT * FROM(SELECT ROWNUM RUM, SUB.*
			FROM(SELECT * FROM STORE
				LEFT JOIN BOOK USING (BOOK_ID)
                LEFT JOIN CLIENT ON (CLIENT_ID = STORAGE_ID)
                WHERE EMP_NAME LIKE '%' || #{ keyword } || '%'
                ORDER BY BOOK_ID DESC) SUB)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow } AND CLASSIFY = '출고'
		]]>
	</select>
	
	<select id="selectReleaseByClientName" parameterType="Search" resultMap="resultStore" >
		<![CDATA[
			SELECT * FROM(SELECT ROWNUM RUM, SUB.*
			FROM(SELECT * FROM STORE
				LEFT JOIN BOOK USING (BOOK_ID)
                LEFT JOIN CLIENT ON (CLIENT_ID = STORAGE_ID)
                WHERE CLIENT_NAME LIKE '%' || #{ keyword } || '%'
                ORDER BY BOOK_ID DESC) SUB)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow } AND CLASSIFY = '출고'
		]]>
	</select>

	<select id="selectPreInvenId" resultType="_int">
		SELECT INVEN_ID
		FROM(SELECT ROWNUM RUM, INVEN_ID
		FROM INVENTORY
		WHERE ROWNUM = 1 AND CLASSIFY = '입고'
		ORDER BY INVEN_ID, INVEN_DATE  DESC)
	</select>
	
	<select id="selectCurrInven" resultType="_int">
		SELECT CURR_INVEN
		FROM(SELECT ROWNUM RUM, CURR_INVEN
		FROM INVENTORY
		WHERE ROWNUM = 1 AND CLASSIFY = '입고'
		ORDER BY INVEN_ID, INVEN_DATE  DESC)
	</select>

	<delete id="deleteStore" parameterType="_int">
		DELETE FROM STORE WHERE STORE_ID = #{ storeId } AND CLASSIFY = '입고'
	</delete>
	
	<delete id="deleteRelease" parameterType="_int">
		DELETE FROM STORE WHERE STORE_ID = #{ storeId } AND CLASSIFY = '출고'
	</delete>
			
	<delete id="deleteInventory" parameterType="_int">
		DELETE FROM INVENTORY WHERE STORE_ID = #{ storeId }
	</delete>
	
	<insert id="insertStore" parameterType="Store">
		INSERT INTO STORE VALUES( 
		#{ storeId }, #{ bookId }, #{ storageId }, #{ empId }, #{ empName }, 
		#{ storeNum }, #{ storePrice },#{ storeDate }, '입고')
	</insert>
	
	
	<insert id="insertInventory" parameterType="Store">
		INSERT INTO INVENTORY VALUES 
		((SELECT MAX(INVEN_ID) + 1 FROM INVENTORY), #{ bookId }, #{ storageId }, #{ storeId }, NULL, 
		#{ prevInvenId },  #{ storeNum }, 
		#{ currInven }, #{ storeDate },'입고', NULL)
	</insert>
	
	<update id="updateStore" parameterType="Store">
		UPDATE STORE
		SET STORE_ID = #{ storeId }, BOOK_ID = #{ bookId }, STORAGE_ID = #{ storageId }, EMP_ID = #{ empId }, 
		EMP_NAME = #{ empName }, STORE_NUM = #{ storeNum }, STORE_PRICE = #{ storePrice }, STORE_DATE = #{ storeDate }, CLASSIFY = #{ classify }
		WHERE STORE_ID = #{ storeId }
	</update>
	
	<update id="updateInventory" parameterType="Store">
		UPDATE INVENTORY
		SET BOOK_ID = #{ bookId }, STORAGE_ID = #{ storageId }, STORE_ID = #{ storeId }, 
		PREV_INVEN_ID = #{ prevInvenId }, CURR_INVEN = #{ currInven },
	    INVEN_DATE = #{ storeDate }
		WHERE STORE_ID = #{ storeId }
	</update>
	
	<select id="selectMaxStoreId" resultType="_int">
		SELECT nvl(MAX(STORE_ID), 0) FROM STORE
	</select>
	
</mapper>