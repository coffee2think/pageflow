<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="refundMapper">
	<resultMap type="Refund" id="resultRefund">
		<result property="refundId" column="REFUND_ID" />
		<result property="bookId" column="BOOK_ID" />
		<result property="clientId" column="CLIENT_ID" />
		<result property="empId" column="EMP_ID" />
		<result property="empName" column="EMP_NAME" />
		<result property="refundNum" column="REFUND_NUM" />
		<result property="refundDate" column="REFUND_DATE" />
		<result property="refundAmount" column="REFUND_AMOUNT" />
		<result property="refundState" column="REFUND_STATE" />
		<result property="remark" column="REMARK" />
		<result property="bookName" column="BOOK_NAME" />
		<result property="clientName" column="CLIENT_NAME" />
		<result property="clientAddredd" column="CLIENT_ADDRESS" />
		<result property="storageId" column="STORAGE_ID" />
	</resultMap>
	
	
	<select id="selectGetListCount" resultType="_int">
		select count(*) from refund
	</select>
	
	<select id="selectRefundList" parameterType="Paging" resultMap="resultRefund">
		<![CDATA[
			SELECT *
			FROM (SELECT ROWNUM RNUM, REFUND_ID, BOOK_ID, CLIENT_ID, EMP_ID, EMP_NAME, REFUND_NUM, REFUND_DATE, REFUND_AMOUNT, REFUND_STATE, REMARK 
			            FROM (SELECT * FROM REFUND
			                  ORDER BY REFUND_DATE DESC))
			WHERE RNUM BETWEEN #{ startRow } AND #{ endRow }
		]]>
	</select>
	
	<select id="selectRefundBookName" parameterType="_int" resultType="string">
		SELECT BOOK_NAME
		FROM  BOOK
		WHERE BOOK_ID= #{ bookId }
	</select>
	
	<select id="selectRefundClientName" parameterType="_int"  resultType="string">
		SELECT CLIENT_NAME
		FROM CLIENT
		WHERE CLIENT_ID = #{ storageId }
	</select>
	
	<select id="selectRefundBookPrice" parameterType="_int"  resultType="_int">
		SELECT BOOK_PRICE
		FROM BOOK
		WHERE BOOK_ID = #{ bookId }
	</select>
	
	<select id="selectRefundCountByDate" parameterType="Search" resultType="_int">
		SELECT COUNT(*) FROM REFUND
		WHERE REFUND_DATE BETWEEN #{ begin } and (to_date(#{ end }) + 1 - 1/86400)
	</select>
	
	<select id="selectRefundByDate" parameterType="Search" resultMap="resultRefund">
		<![CDATA[
		SELECT *
		FROM (SELECT ROWNUM RNUM, REFUND_ID, BOOK_ID,  CLIENT_ID, EMP_ID, EMP_NAME, REFUND_NUM, 
		                            REFUND_DATE, REFUND_AMOUNT, REFUND_STATE, REMARK, BOOK_NAME, CLIENT_NAME
		            FROM (SELECT *
		                        FROM REFUND
		                        LEFT JOIN CLIENT USING (CLIENT_ID)
		                        LEFT JOIN BOOK USING (BOOK_ID)   
		                        WHERE REFUND_DATE BETWEEN #{ begin } AND (TO_DATE(#{ end }) + 1 - 1/86400)))
		WHERE RNUM BETWEEN #{ startRow } AND #{ endRow }
		ORDER BY REFUND_DATE DESC
		]]>
	</select>
	
	<select id="selectrefundCountByBookId" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM REFUND
		WHERE BOOK_ID LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectrefundCountByBookName" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM BOOK
		JOIN REFUND ON (BOOK_ID)
		WHERE BOOK_NAME LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectrefundCountByEmpName" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM REFUND
		WHERE EMP_NAME LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectrefundCountByClientName" parameterType="Search" resultType="_int">
		SELECT COUNT(*)
		FROM CLIENT
		WHERE CLIENT_NAME LIKE '%' || #{ keyword } || '%'
	</select>
	
	<select id="selectrefundBybookId" parameterType="Search" resultMap="resultRefund" >
		<![CDATA[
			SELECT *
			FROM(SELECT ROWNUM RUM, SUB.*
			            FROM(SELECT * FROM REFUND
	                        WHERE BOOK_ID LIKE '%' || #{ keyword } || '%'
	                        ORDER BY REFUND_DATE DESC) SUB)
			LEFT JOIN BOOK USING (BOOK_ID)
			LEFT JOIN CLIENT USING (CLIENT_ID)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow }
		]]>
	</select>
	
	<select id="selectrefundBybookName" parameterType="Search" resultMap="resultRefund" >
		<![CDATA[
			SELECT *
			FROM(SELECT ROWNUM RUM, SUB.*
			            FROM(SELECT * FROM REFUND
	                        WHERE BOOK_NAME LIKE '%' || #{ keyword } || '%'
	                        ORDER BY REFUND_DATE DESC) SUB)
			LEFT JOIN BOOK USING (BOOK_ID)
			LEFT JOIN CLIENT USING (CLIENT_ID)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow }
		]]>
	</select>
	
	
	<select id="selectrefundByEmpName" parameterType="Search" resultMap="resultRefund" >
		<![CDATA[
			SELECT *
			FROM(SELECT ROWNUM RUM, SUB.*
			            FROM(SELECT * FROM REFUND
	                        WHERE EMP_NAME LIKE '%' || #{ keyword } || '%'
	                        ORDER BY REFUND_DATE DESC) SUB)
			LEFT JOIN BOOK USING (BOOK_ID)
			LEFT JOIN CLIENT USING (CLIENT_ID)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow }
		]]>
	</select>
	
	<select id="selectrefundByClientName" parameterType="Search" resultMap="resultRefund" >
		<![CDATA[
			SELECT *
			FROM(SELECT ROWNUM RUM, SUB.*
			            FROM(SELECT * FROM REFUND
			            LEFT JOIN BOOK USING (BOOK_ID)
						LEFT JOIN CLIENT USING (CLIENT_ID)
	                        WHERE CLIENT_NAME LIKE '%' || #{ keyword } || '%'
	                        ORDER BY REFUND_DATE DESC) SUB)
			WHERE RUM >= #{ startRow } AND RUM <= #{ endRow }
		]]>
	</select>
	
	<delete id="deleteRefund" parameterType="_int">
		DELETE FROM REFUND WHERE REFUND_ID = #{ refundId }
	</delete>
			
	<delete id="deleteInventory" parameterType="_int">
		DELETE FROM INVENTORY WHERE REFUND_ID = #{ refundId }
	</delete>
	
	<select id="selectMaxRefundId" resultType="_int">
		SELECT nvl(MAX(REFUND_ID), 0) FROM REFUND
	</select>

	<select id="selectPreInvenId" resultType="_int">
		SELECT INVEN_ID
		FROM(SELECT ROWNUM RUM, INVEN_ID
		FROM INVENTORY
		WHERE ROWNUM = 1 AND CLASSIFY = '반품'
		ORDER BY INVEN_ID, INVEN_DATE  DESC)
	</select>
	
	<select id="selectCurrInven" resultType="_int">
		SELECT CURR_INVEN
		FROM(SELECT ROWNUM RUM, CURR_INVEN
            FROM INVENTORY
            WHERE ROWNUM = 1 AND CLASSIFY = '반품'
            ORDER BY INVEN_ID, INVEN_DATE  DESC)
	</select>
	
	<insert id="insertInventory" parameterType="refund">
	<![CDATA[
	       INSERT INTO INVENTORY VALUES (
		(SELECT MAX(INVEN_ID) + 1 FROM INVENTORY), #{ bookId }, #{ storageId }, NULL, #{ refundId },
		(SELECT INVEN_ID
		FROM(SELECT INVEN_ID, ROWNUM
		            FROM INVENTORY 
		            ORDER BY INVEN_DATE DESC)
		WHERE ROWNUM = 1),
		
		(SELECT REFUND_NUM FROM (SELECT REFUND_NUM, ROWNUM
		FROM REFUND
		WHERE REFUND_ID = #{ refundId }
        ORDER BY REFUND_DATE DESC)
        WHERE ROWNUM = 1),
		
		((SELECT NVL(CURR_INVEN, 0)
		FROM (
		    SELECT CURR_INVEN, ROWNUM
		    FROM INVENTORY
		    WHERE BOOK_ID = #{ bookId }
		    ORDER BY INVEN_DATE DESC
		)
		WHERE ROWNUM = 1) + 
				(
		        SELECT REFUND_NUM
		        FROM(SELECT REFUND_NUM, ROWNUM
				FROM REFUND
				WHERE REFUND_ID = #{ refundId } AND ROWNUM =1
		        ORDER BY REFUND_DATE DESC)
		        )
		        
		        ),
				#{ refundDate }, '반품', NULL)
]]>
	</insert>
	
	<insert id="insertRefund" parameterType="Refund">
		INSERT INTO REFUND VALUES ( 
		#{ refundId }, #{ bookId }, #{ clientId }, #{ empId }, #{ empName }, 
		#{ refundNum }, #{ refundDate },#{ refundAmount },#{ refundState }, #{ remark })
	</insert>
	
</mapper>